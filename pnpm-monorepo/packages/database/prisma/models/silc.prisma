model SilcTransaction {
  id          String    @id @default(cuid())
  receiverId  String
  receiver    Entity    @relation("receiver", fields: [receiverId], references: [id], onDelete: Cascade)
  value       Int
  description String?
  createdAt   DateTime  @default(now())
  createdById String?
  createdBy   Entity?   @relation("createdBy", fields: [createdById], references: [id], onDelete: SetNull)
  updatedAt   DateTime?
  updatedById String?
  updatedBy   Entity?   @relation("updatedBy", fields: [updatedById], references: [id], onDelete: SetNull)
  deletedAt   DateTime?
  deletedById String?
  deletedBy   Entity?   @relation("deletedBy", fields: [deletedById], references: [id], onDelete: SetNull)

  @@index([receiverId])
}

model SilcSetting {
  key         SilcSettingKey @id
  value       String
  updatedAt   DateTime?      @updatedAt
  updatedBy   Entity?        @relation("updatedBy", fields: [updatedById], references: [id], onDelete: SetNull)
  updatedById String?
}

enum SilcSettingKey {
  AUEC_CONVERSION_RATE
}

model SilcRoleSalary {
  id         String @id @default(cuid(2))
  roleId     String
  role       Role   @relation(fields: [roleId], references: [id], onDelete: Cascade)
  value      Int
  dayOfMonth Int
}
