model Event {
  id                  String                    @id @default(cuid())
  discordId           String                    @unique
  discordCreatorId    String
  name                String                    @map("discordName")
  createdAt           DateTime                  @default(now())
  updatedAt           DateTime                  @updatedAt
  discordParticipants EventDiscordParticipant[]
  positions           EventPosition[]
  lineupEnabled       Boolean                   @default(false)
  startTime           DateTime
  endTime             DateTime?
  description         String?
  location            String?
  discordImage        String?
  discordGuildId      String?

  @@map("DiscordEvent")
}

model EventDiscordParticipant {
  id            String   @id @default(cuid())
  eventId       String
  event         Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
  discordUserId String
  createdAt     DateTime @default(now())

  @@unique([eventId, discordUserId])
  @@map("DiscordEventParticipant")
}

model EventPosition {
  id                String                     @id @default(cuid())
  eventId           String
  event             Event                      @relation(fields: [eventId], references: [id], onDelete: Cascade)
  name              String
  description       String?
  requiredVariantId String?
  requiredVariant   Variant?                   @relation(fields: [requiredVariantId], references: [id], onDelete: SetNull)
  requiredRoles     Role[]
  applications      EventPositionApplication[] @relation("applications")
  citizenId         String?
  citizen           Entity?                    @relation("citizen", fields: [citizenId], references: [id], onDelete: SetNull)
  parentPositionId  String?
  parentPosition    EventPosition?             @relation("parentPosition", fields: [parentPositionId], references: [id], onDelete: Cascade)
  childPositions    EventPosition[]            @relation("parentPosition")
  order             Int                        @default(0)
}

model EventPositionApplication {
  id         String        @id @default(cuid())
  positionId String
  position   EventPosition @relation("applications", fields: [positionId], references: [id], onDelete: Cascade)
  citizenId  String
  citizen    Entity        @relation("citizen", fields: [citizenId], references: [id], onDelete: Cascade)
  createdAt  DateTime      @default(now())

  @@unique([positionId, citizenId])
}
